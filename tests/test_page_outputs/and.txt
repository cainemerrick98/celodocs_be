AND Description <left logical expression> AND<right logical expression> evaluates to true, when the left and the right hand side logical expressions are true. Evaluates to false otherwise. <left logical expression> AND<right logical expression> Parentheses may be used to simply make the complete logical expression more readable, but can also be used to change the meaning of the complete logical expression. This is possible through the order of precedence for logical expressions, described in the Functions and Operators section. Syntax logical expression AND logical expression NULL handling PQL implements a three-valued logic system with the following truth table: <table>a,b,a AND b
true,true,true
true,false,false
true,NULL,NULL
false,false,false
false,NULL,false
NULL,NULL,NULL</table> Examples  <pql_example>Description: AND in a CASE WHEN context. Queries: CASE WHEN"Table1"."Column1"> 2 AND"Table1"."Column1"< 4 THEN"Table1"."Column1" ELSE null ENDInput tables:Output:
Column1: int
null
3
null</pql_example>   <pql_example>Description: AND in a FILTER context. Queries: FILTER("Table1"."Column1"< 4) AND("Table1"."Column2"> 12);,"Table1"."Column1","Table1"."Column2"Input tables:Output:
Column1: int,Column2: int
3,13</pql_example>   <pql_example>Description: AND in a PU_SUM context, specifically the filter part of the Pull-Up-Function. Queries: "companyDetail"."companyCode",PU_SUM("companyDetail","caseTable"."value",("caseTable"."value"> 250) AND("caseTable"."value"< 500))Input tables:caseId: int,companyCode: string,value: int
1,'001',600
2,'001',400
3,'001',200
4,'002',300
5,'002',300
6,'003',200
companyCode: string,country: string
'001','DE'
'002','DE'
'003','US'Output:
Column1: string,Column2: int
'001',400
'002',600
'003',null</pql_example>  